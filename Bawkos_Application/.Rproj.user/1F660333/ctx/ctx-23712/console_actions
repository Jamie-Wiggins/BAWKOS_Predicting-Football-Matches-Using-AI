{
    "type": [
        2,
        2,
        0,
        1,
        2,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "[Workspace loaded from ~/COM3018_Code/ProjectBawkos_Group_I/.RData]\r\n\r\n",
        "> ",
        "source(\"nn_xGNS.R\")",
        "Error in install.packages : Updating loaded packages\n",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "\nRestarting R session...\n\n",
        "> ",
        "source(\"neural_network.R\")",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/dplyr_1.0.7.zip'\n",
        "Content type 'application/zip'",
        " length 1344315 bytes (1.3 MB)\n",
        "downloaded 1.3 MB\n\n",
        "package ‘dplyr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpsjW6Cr\\downloaded_packages\n",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/plyr_1.8.6.zip'\n",
        "Content type 'application/zip'",
        " length 1499802 bytes (1.4 MB)\n",
        "downloaded 1.4 MB\n\n",
        "package ‘plyr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpsjW6Cr\\downloaded_packages\nError in install.packages : Updating loaded packages\n",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/caret_6.0-90.zip'\n",
        "Content type 'application/zip'",
        " length 3590324 bytes (3.4 MB)\n",
        "downloaded 3.4 MB\n\n",
        "package ‘caret’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpsjW6Cr\\downloaded_packages\n",
        "\nAttaching package: ‘dplyr’\n\n",
        "The following objects are masked from ‘package:plyr’:\n\n    arrange, count, desc, failwith, id, mutate, rename, summarise, summarize\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n",
        "The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "\nAttaching package: ‘neuralnet’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    compute\n\n",
        "Loading required package: ggplot2\n",
        "Loading required package: lattice\n",
        "\nRestarting R session...\n\n",
        "> ",
        "install.packages(\"neuralnet\")",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/neuralnet_1.44.2.zip'\n",
        "Content type 'application/zip'",
        " length 123959 bytes (121 KB)\n",
        "downloaded 121 KB\n\n",
        "package ‘neuralnet’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpoH9W53\\downloaded_packages\n",
        "> ",
        "runK <- function(){print(\"Running K\")}",
        "> ",
        "runN <- function(){neural_network()}",
        "> ",
        "runR <- function(){print(\"Running R\")}",
        "> ",
        "",
        "> ",
        "repeat{",
        "+ ",
        "  print(\"Enter 'K' to run KNN\")",
        "+ ",
        "  print(\"Enter 'N'to run Neural Network\")",
        "+ ",
        "  print(\"Enter 'R' to run Random Forest\")",
        "+ ",
        "  print(\"Enter 'Q' to quit\")",
        "+ ",
        "  result = switch(  ",
        "+ ",
        "    readline(),  ",
        "+ ",
        "    \"K\"= runK(),  ",
        "+ ",
        "    \"N\"= runN(),",
        "+ ",
        "    \"R\"= runR(), ",
        "+ ",
        "    \"Q\"= break",
        "+ ",
        "  )  ",
        "+ ",
        "  ",
        "+ ",
        "}",
        "[1] \"Enter 'K' to run KNN\"\n[1] \"Enter 'N'to run Neural Network\"\n[1] \"Enter 'R' to run Random Forest\"\n[1] \"Enter 'Q' to quit\"\n",
        "",
        "source(\"neural_network.R\")",
        "[1] \"Enter 'K' to run KNN\"\n[1] \"Enter 'N'to run Neural Network\"\n[1] \"Enter 'R' to run Random Forest\"\n[1] \"Enter 'Q' to quit\"\n",
        "",
        "Q",
        "> ",
        "source(\"neural_network.R\")",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/dplyr_1.0.7.zip'\n",
        "Content type 'application/zip'",
        " length 1344315 bytes (1.3 MB)\n",
        "downloaded 1.3 MB\n\n",
        "package ‘dplyr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpoH9W53\\downloaded_packages\n",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/plyr_1.8.6.zip'\n",
        "Content type 'application/zip'",
        " length 1499802 bytes (1.4 MB)\n",
        "downloaded 1.4 MB\n\n",
        "package ‘plyr’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpoH9W53\\downloaded_packages\n",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/neuralnet_1.44.2.zip'\n",
        "Content type 'application/zip'",
        " length 123959 bytes (121 KB)\n",
        "downloaded 121 KB\n\n",
        "package ‘neuralnet’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpoH9W53\\downloaded_packages\n",
        "Installing package into ‘C:/Users/jamie.DESKTOP-7TF9QFI/OneDrive/Documents/R/win-library/4.1’\n(as ‘lib’ is unspecified)\n",
        "trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.1/caret_6.0-90.zip'\n",
        "Content type 'application/zip'",
        " length 3590324 bytes (3.4 MB)\n",
        "downloaded 3.4 MB\n\n",
        "package ‘caret’ successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n\tC:\\Users\\jamie.DESKTOP-7TF9QFI\\AppData\\Local\\Temp\\RtmpoH9W53\\downloaded_packages\n",
        "\nAttaching package: ‘dplyr’\n\n",
        "The following objects are masked from ‘package:plyr’:\n\n    arrange, count, desc, failwith, id, mutate, rename, summarise, summarize\n\n",
        "The following objects are masked from ‘package:stats’:\n\n    filter, lag\n\n",
        "The following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n",
        "\nAttaching package: ‘neuralnet’\n\n",
        "The following object is masked from ‘package:dplyr’:\n\n    compute\n\n",
        "Loading required package: ggplot2\n",
        "Loading required package: lattice\n",
        "> ",
        "runK <- function(){print(\"Running K\")}",
        "> ",
        "runN <- function(){neural_network()}",
        "> ",
        "runR <- function(){print(\"Running R\")}",
        "> ",
        "",
        "> ",
        "repeat{",
        "+ ",
        "  print(\"Enter 'K' to run KNN\")",
        "+ ",
        "  print(\"Enter 'N'to run Neural Network\")",
        "+ ",
        "  print(\"Enter 'R' to run Random Forest\")",
        "+ ",
        "  print(\"Enter 'Q' to quit\")",
        "+ ",
        "  result = switch(  ",
        "+ ",
        "    readline(),  ",
        "+ ",
        "    \"K\"= runK(),  ",
        "+ ",
        "    \"N\"= runN(),",
        "+ ",
        "    \"R\"= runR(), ",
        "+ ",
        "    \"Q\"= break",
        "+ ",
        "  )  ",
        "+ ",
        "  ",
        "+ ",
        "}",
        "[1] \"Enter 'K' to run KNN\"\n[1] \"Enter 'N'to run Neural Network\"\n[1] \"Enter 'R' to run Random Forest\"\n[1] \"Enter 'Q' to quit\"\n",
        "",
        "N",
        "Error in file(file, \"rt\") : cannot open the connection\n",
        "In addition: ",
        "Warning message:\n",
        "In file(file, \"rt\") :",
        "\n ",
        " cannot open file 'class_feature': No such file or directory\n",
        "> ",
        "##### Packages #####",
        "> ",
        "install.packages(\"dplyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"plyr\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"neuralnet\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "install.packages(\"caret\")",
        "Error in install.packages : Updating loaded packages\n",
        "> ",
        "library(plyr)",
        "> ",
        "library(dplyr)",
        "> ",
        "library(neuralnet)",
        "> ",
        "library(caret)",
        "> ",
        "",
        "> ",
        "neural_network <- function() {",
        "+ ",
        "##### Set Seed #####",
        "+ ",
        "# Seed is set so that the results can be reproduced for marking",
        "+ ",
        "set.seed(1773894103)",
        "+ ",
        "",
        "+ ",
        "##### Load Files #####",
        "+ ",
        "source_dir <- paste(getwd(),\"class_feature\",sep = \"/\") # path location of files",
        "+ ",
        "",
        "+ ",
        "# read in CSV data",
        "+ ",
        "data <- read.csv(file=source_dir)",
        "+ ",
        "unseen_cut = length(data$FTR)-379",
        "+ ",
        "unseen_data <- data[unseen_cut:length(data$FTR),]",
        "+ ",
        "data <- data[1:unseen_cut,]",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "##### Neural Network Model Fitting #####",
        "+ ",
        "#cv.error <- NULL",
        "+ ",
        "#k <- 10",
        "+ ",
        "#maxs <- apply(data, 2, max) ",
        "+ ",
        "#mins <- apply(data, 2, min)",
        "+ ",
        "#scaled <- as.data.frame(scale(data, center = mins, scale = maxs - mins))",
        "+ ",
        "",
        "+ ",
        "#pbar <- create_progress_bar('text')",
        "+ ",
        "#pbar$init(k)",
        "+ ",
        "#for(i in 1:k){",
        "+ ",
        "#  index <- sample(1:nrow(data),round(0.9*nrow(data)))",
        "+ ",
        "#  train.cv <- scaled[index,]",
        "+ ",
        "#  test.cv <- scaled[-index,]",
        "+ ",
        "#  nn <- neuralnet(FTR~.,data=train.cv,hidden=1,stepmax=1e7,act.fct = \"logistic\",linear.output=TRUE)   ",
        "+ ",
        "#  pr.nn <- compute(nn,test.cv[,1:3])",
        "+ ",
        "#  pr.nn <- pr.nn$net.result*(max(data$FTR)-min(data$FTR))+min(data$FTR)   ",
        "+ ",
        "#  test.cv.r <- (test.cv$FTR)*(max(data$FTR)-min(data$FTR))+min(data$FTR)   ",
        "+ ",
        "#  cv.error[i] <- sum((test.cv.r - pr.nn)^2)/nrow(test.cv)    ",
        "+ ",
        "#  pbar$step()",
        "+ ",
        "#}",
        "+ ",
        "",
        "+ ",
        "#### Neural Network Model no fitting ####",
        "+ ",
        "nn = neuralnet(FTR~.,",
        "+ ",
        "               data=data,",
        "+ ",
        "               hidden=1,",
        "+ ",
        "               stepmax=1e7,",
        "+ ",
        "               act.fct = \"logistic\",",
        "+ ",
        "               linear.output = TRUE",
        "+ ",
        "               )",
        "+ ",
        "",
        "+ ",
        "##### Measuring Model #####",
        "+ ",
        "plot(nn)",
        "+ ",
        "Predict=neuralnet::compute(nn,unseen_data)",
        "+ ",
        "overall <- data.frame(Predict$net.result, unseen_data$FTR)",
        "+ ",
        "overall$Predict.net.result <- overall$Predict.net.result*3",
        "+ ",
        "overall$True_Value <- ifelse(round(overall$Predict.net.result, digits=0) >= 2, 3,",
        "+ ",
        "                             ifelse(round(overall$Predict.net.result, digits=0) < 2 &&",
        "+ ",
        "                                      round(overall$Predict.net.result, digits=0) > 0.5, 1,",
        "+ ",
        "                                    ifelse(round(overall$Predict.net.result, digits=0) < 0.5, 0, FALSE)))",
        "+ ",
        "overall$Winner <- ifelse(overall$True_Value == unseen_data$FTR, TRUE, FALSE)",
        "+ ",
        "",
        "+ ",
        "print((sum(overall$Winner == TRUE)/length(unseen_data$FTR))*100)",
        "+ ",
        "",
        "+ ",
        "matrix <- confusionMatrix(factor(overall$True_Value, levels=c(\"0\", \"1\", \"3\")),",
        "+ ",
        "                          as.factor(unseen_data$FTR))",
        "+ ",
        "rmse = RMSE(overall$True_Value, unseen_data$FTR)",
        "+ ",
        "mae = MAE(overall$True_Value, unseen_data$FTR)",
        "+ ",
        "print(rmse)",
        "+ ",
        "print(mae)",
        "+ ",
        "print(matrix)",
        "+ ",
        "}",
        "\nRestarting R session...\n\n"
    ]
}